// Code generated by protoc-gen-go.
// source: rpc.proto
// DO NOT EDIT!

/*
Package rpc is a generated protocol buffer package.

It is generated from these files:
	rpc.proto

It has these top-level messages:
	RpcRequest
	RpcResponse
	RpcHeart
	RpcRouterItem
	RpcRouter
*/
package rpc

import proto "github.com/golang/protobuf/proto"
import fmt "fmt"
import math "math"

// Reference imports to suppress errors if they are not otherwise used.
var _ = proto.Marshal
var _ = fmt.Errorf
var _ = math.Inf

// This is a compile-time assertion to ensure that this generated file
// is compatible with the proto package it is being compiled against.
// A compilation error at this line likely means your copy of the
// proto package needs to be updated.
const _ = proto.ProtoPackageIsVersion2 // please upgrade the proto package

type RpcMsgType int32

const (
	RpcMsgType_Heart    RpcMsgType = 1
	RpcMsgType_Request  RpcMsgType = 2
	RpcMsgType_Response RpcMsgType = 3
	RpcMsgType_Router   RpcMsgType = 4
)

var RpcMsgType_name = map[int32]string{
	1: "Heart",
	2: "Request",
	3: "Response",
	4: "Router",
}
var RpcMsgType_value = map[string]int32{
	"Heart":    1,
	"Request":  2,
	"Response": 3,
	"Router":   4,
}

func (x RpcMsgType) Enum() *RpcMsgType {
	p := new(RpcMsgType)
	*p = x
	return p
}
func (x RpcMsgType) String() string {
	return proto.EnumName(RpcMsgType_name, int32(x))
}
func (x *RpcMsgType) UnmarshalJSON(data []byte) error {
	value, err := proto.UnmarshalJSONEnum(RpcMsgType_value, data, "RpcMsgType")
	if err != nil {
		return err
	}
	*x = RpcMsgType(value)
	return nil
}
func (RpcMsgType) EnumDescriptor() ([]byte, []int) { return fileDescriptor0, []int{0} }

type RpcRequest struct {
	Rid              *uint32 `protobuf:"varint,1,opt,name=rid" json:"rid,omitempty"`
	Method           *string `protobuf:"bytes,2,opt,name=method" json:"method,omitempty"`
	Data             []byte  `protobuf:"bytes,3,opt,name=data" json:"data,omitempty"`
	XXX_unrecognized []byte  `json:"-"`
}

func (m *RpcRequest) Reset()                    { *m = RpcRequest{} }
func (m *RpcRequest) String() string            { return proto.CompactTextString(m) }
func (*RpcRequest) ProtoMessage()               {}
func (*RpcRequest) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{0} }

func (m *RpcRequest) GetRid() uint32 {
	if m != nil && m.Rid != nil {
		return *m.Rid
	}
	return 0
}

func (m *RpcRequest) GetMethod() string {
	if m != nil && m.Method != nil {
		return *m.Method
	}
	return ""
}

func (m *RpcRequest) GetData() []byte {
	if m != nil {
		return m.Data
	}
	return nil
}

type RpcResponse struct {
	Rid              *uint32 `protobuf:"varint,1,opt,name=rid" json:"rid,omitempty"`
	Err              *string `protobuf:"bytes,2,opt,name=err" json:"err,omitempty"`
	Data             []byte  `protobuf:"bytes,3,opt,name=data" json:"data,omitempty"`
	XXX_unrecognized []byte  `json:"-"`
}

func (m *RpcResponse) Reset()                    { *m = RpcResponse{} }
func (m *RpcResponse) String() string            { return proto.CompactTextString(m) }
func (*RpcResponse) ProtoMessage()               {}
func (*RpcResponse) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{1} }

func (m *RpcResponse) GetRid() uint32 {
	if m != nil && m.Rid != nil {
		return *m.Rid
	}
	return 0
}

func (m *RpcResponse) GetErr() string {
	if m != nil && m.Err != nil {
		return *m.Err
	}
	return ""
}

func (m *RpcResponse) GetData() []byte {
	if m != nil {
		return m.Data
	}
	return nil
}

type RpcHeart struct {
	XXX_unrecognized []byte `json:"-"`
}

func (m *RpcHeart) Reset()                    { *m = RpcHeart{} }
func (m *RpcHeart) String() string            { return proto.CompactTextString(m) }
func (*RpcHeart) ProtoMessage()               {}
func (*RpcHeart) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{2} }

type RpcRouterItem struct {
	Method           *string `protobuf:"bytes,1,opt,name=method" json:"method,omitempty"`
	ReqMsgId         *uint32 `protobuf:"varint,2,opt,name=reqMsgId" json:"reqMsgId,omitempty"`
	ReplyMsgId       *uint32 `protobuf:"varint,3,opt,name=replyMsgId" json:"replyMsgId,omitempty"`
	XXX_unrecognized []byte  `json:"-"`
}

func (m *RpcRouterItem) Reset()                    { *m = RpcRouterItem{} }
func (m *RpcRouterItem) String() string            { return proto.CompactTextString(m) }
func (*RpcRouterItem) ProtoMessage()               {}
func (*RpcRouterItem) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{3} }

func (m *RpcRouterItem) GetMethod() string {
	if m != nil && m.Method != nil {
		return *m.Method
	}
	return ""
}

func (m *RpcRouterItem) GetReqMsgId() uint32 {
	if m != nil && m.ReqMsgId != nil {
		return *m.ReqMsgId
	}
	return 0
}

func (m *RpcRouterItem) GetReplyMsgId() uint32 {
	if m != nil && m.ReplyMsgId != nil {
		return *m.ReplyMsgId
	}
	return 0
}

type RpcRouter struct {
	Items            []*RpcRouterItem `protobuf:"bytes,1,rep,name=items" json:"items,omitempty"`
	XXX_unrecognized []byte           `json:"-"`
}

func (m *RpcRouter) Reset()                    { *m = RpcRouter{} }
func (m *RpcRouter) String() string            { return proto.CompactTextString(m) }
func (*RpcRouter) ProtoMessage()               {}
func (*RpcRouter) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{4} }

func (m *RpcRouter) GetItems() []*RpcRouterItem {
	if m != nil {
		return m.Items
	}
	return nil
}

func init() {
	proto.RegisterType((*RpcRequest)(nil), "rpc.RpcRequest")
	proto.RegisterType((*RpcResponse)(nil), "rpc.RpcResponse")
	proto.RegisterType((*RpcHeart)(nil), "rpc.RpcHeart")
	proto.RegisterType((*RpcRouterItem)(nil), "rpc.RpcRouterItem")
	proto.RegisterType((*RpcRouter)(nil), "rpc.RpcRouter")
	proto.RegisterEnum("rpc.RpcMsgType", RpcMsgType_name, RpcMsgType_value)
}

func init() { proto.RegisterFile("rpc.proto", fileDescriptor0) }

var fileDescriptor0 = []byte{
	// 237 bytes of a gzipped FileDescriptorProto
	0x1f, 0x8b, 0x08, 0x00, 0x00, 0x09, 0x6e, 0x88, 0x02, 0xff, 0x6c, 0x90, 0xb1, 0x4b, 0xc3, 0x40,
	0x18, 0xc5, 0x49, 0xaf, 0xa9, 0xc9, 0x4b, 0x23, 0xc7, 0x37, 0x65, 0xd4, 0x4c, 0xc5, 0x21, 0x83,
	0x20, 0x6e, 0x0e, 0x82, 0x60, 0x07, 0x97, 0xe2, 0xe4, 0x16, 0x9a, 0x0f, 0x2d, 0x58, 0xef, 0xfa,
	0xdd, 0x75, 0xe8, 0x7f, 0xef, 0x97, 0x44, 0xc5, 0x40, 0xb7, 0x7b, 0x07, 0xef, 0xf7, 0xde, 0xfb,
	0x90, 0x8b, 0xdf, 0x36, 0x5e, 0x5c, 0x74, 0x64, 0xf4, 0x59, 0xdf, 0x03, 0x1b, 0xbf, 0xdd, 0xf0,
	0xe1, 0xc8, 0x21, 0x52, 0x01, 0x23, 0xbb, 0xae, 0x4a, 0xae, 0x92, 0x55, 0x49, 0x97, 0x58, 0xec,
	0x39, 0x7e, 0xb8, 0xae, 0x9a, 0xa9, 0xce, 0x69, 0x89, 0x79, 0xd7, 0xc6, 0xb6, 0x32, 0xaa, 0x96,
	0xf5, 0x1d, 0x8a, 0xc1, 0x18, 0xbc, 0xfb, 0x0a, 0x3c, 0x75, 0xaa, 0x60, 0x91, 0xb3, 0x36, 0x20,
	0x53, 0xdb, 0x33, 0xb7, 0x12, 0xeb, 0x27, 0x94, 0x3d, 0xc2, 0x1d, 0x23, 0xcb, 0x3a, 0xf2, 0xfe,
	0x5f, 0x62, 0x32, 0x58, 0x2d, 0x32, 0xe1, 0xc3, 0x4b, 0x78, 0x5f, 0x8f, 0x1d, 0x4a, 0x22, 0x40,
	0xd8, 0x7f, 0x9e, 0xc6, 0xbf, 0x1e, 0x59, 0xd6, 0x0d, 0xf2, 0x3f, 0x0c, 0x5d, 0x23, 0xdd, 0x29,
	0x2a, 0x28, 0xc1, 0xac, 0x8a, 0x5b, 0x6a, 0xfa, 0xbd, 0x93, 0x94, 0x9b, 0x87, 0x61, 0xb2, 0x12,
	0x5e, 0x4f, 0x9e, 0x29, 0x47, 0x3a, 0xb4, 0xb1, 0x89, 0xd6, 0xbe, 0xf8, 0x39, 0x84, 0x9d, 0x69,
	0xed, 0xec, 0x77, 0x9c, 0x35, 0x1a, 0xbb, 0x18, 0x09, 0x76, 0xfe, 0x98, 0xbe, 0xf5, 0x97, 0xfb,
	0x0e, 0x00, 0x00, 0xff, 0xff, 0x7f, 0xcd, 0x3b, 0xc3, 0x4a, 0x01, 0x00, 0x00,
}
